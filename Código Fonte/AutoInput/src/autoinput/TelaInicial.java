
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package autoinput;

import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.CLOSED_OPTION;
import org.jnativehook.GlobalScreen;
import org.jnativehook.NativeHookException;

/**
 *
 * @author notrbook
 */
public class TelaInicial extends javax.swing.JFrame {
    private String deletar, confDeletar, nomePerfil, nomeInvalido, novoPerfil, excluirPerfil, portugues, ingles;
    private String escolha, selecao, captura, desliga;
    /**
     * Creates new form TelaInicial
     */
    public TelaInicial() {
        initComponents();
        setIcon();
    }

    public String getDesliga() {
        return desliga;
    }

    public void setDesliga(String desliga) {
        this.desliga = desliga;
    }
    
    public String getCaptura() {
        return captura;
    }

    public void setCaptura(String captura) {
        this.captura = captura;
    }
    
    public String getPortugues() {
        return portugues;
    }

    public void setPortugues(String portugues) {
        this.portugues = portugues;
    }

    public String getIngles() {
        return ingles;
    }

    public void setIngles(String ingles) {
        this.ingles = ingles;
    }

    public String getEscolha() {
        return escolha;
    }

    public void setEscolha(String escolha) {
        this.escolha = escolha;
    }

    public String getSelecao() {
        return selecao;
    }

    public void setSelecao(String selecao) {
        this.selecao = selecao;
    }

    public String getExcluirPerfil() {
        return excluirPerfil;
    }

    public void setExcluirPerfil(String excluirPerfil) {
        this.excluirPerfil = excluirPerfil;
    }
    
    public String getNovoPerfil() {
        return novoPerfil;
    }

    public void setNovoPerfil(String novoPerfil) {
        this.novoPerfil = novoPerfil;
    }

    public String getNomePerfil() {
        return nomePerfil;
    }

    public void setNomePerfil(String nomePerfil) {
        this.nomePerfil = nomePerfil;
    }

    public String getNomeInvalido() {
        return nomeInvalido;
    }

    public void setNomeInvalido(String nomeInvalido) {
        this.nomeInvalido = nomeInvalido;
    }
    
    public String getConfDeletar() {
        return confDeletar;
    }

    public void setConfDeletar(String confDeletar) {
        this.confDeletar = confDeletar;
    }
    public void setDeletar (String x){
        this.deletar = x;
    }
    public String getDeletar (){
        return this.deletar;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        painelPerfil = new javax.swing.JPanel();
        listaPerfis = new javax.swing.JComboBox();
        btnNovoPerfil = new javax.swing.JButton();
        btnExcluirPerfil = new javax.swing.JButton();
        btnSalvarPerfil = new javax.swing.JButton();
        painelIntervalo = new javax.swing.JPanel();
        labelMinutos = new javax.swing.JLabel();
        labelSegundos = new javax.swing.JLabel();
        minutos = new javax.swing.JSpinner();
        segundos = new javax.swing.JSpinner();
        horas = new javax.swing.JSpinner();
        labelHoras = new javax.swing.JLabel();
        painelExecucao = new javax.swing.JPanel();
        labelIniciarPararExe = new javax.swing.JLabel();
        atalhoExecucao = new javax.swing.JComboBox();
        checkPararAuto = new javax.swing.JCheckBox();
        labelNumRepeticoes = new javax.swing.JLabel();
        checkDesligarPC = new javax.swing.JCheckBox();
        btnExecutar = new javax.swing.JButton();
        numRepeticoes = new javax.swing.JSpinner();
        painelCaptura = new javax.swing.JPanel();
        labelIniciarPararCap = new javax.swing.JLabel();
        atalhoCaptura = new javax.swing.JComboBox();
        btnCapturar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuArquivo = new javax.swing.JMenu();
        subMenuAddPerfil = new javax.swing.JMenuItem();
        subMenuDeletarPerfil = new javax.swing.JMenuItem();
        subMenuSalvarPerfil = new javax.swing.JMenuItem();
        MenuConfig = new javax.swing.JMenu();
        subMenuIdioma = new javax.swing.JMenuItem();
        subMenuDiretorio = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("AutoInput");
        setResizable(false);

        painelPerfil.setBorder(javax.swing.BorderFactory.createTitledBorder("Perfil"));

        listaPerfis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----------------" }));
        listaPerfis.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                listaPerfisPopupMenuWillBecomeVisible(evt);
            }
        });
        listaPerfis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listaPerfisActionPerformed(evt);
            }
        });

        btnNovoPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/criar.png"))); // NOI18N
        btnNovoPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoPerfilActionPerformed(evt);
            }
        });

        btnExcluirPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/excluir.gif"))); // NOI18N
        btnExcluirPerfil.setBorder(null);
        btnExcluirPerfil.setEnabled(false);
        btnExcluirPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPerfilActionPerformed(evt);
            }
        });

        btnSalvarPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/salvar.png"))); // NOI18N
        btnSalvarPerfil.setBorder(null);
        btnSalvarPerfil.setEnabled(false);
        btnSalvarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarPerfilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelPerfilLayout = new javax.swing.GroupLayout(painelPerfil);
        painelPerfil.setLayout(painelPerfilLayout);
        painelPerfilLayout.setHorizontalGroup(
            painelPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPerfilLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listaPerfis, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNovoPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExcluirPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSalvarPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelPerfilLayout.setVerticalGroup(
            painelPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPerfilLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPerfilLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSalvarPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNovoPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listaPerfis, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExcluirPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        painelIntervalo.setBorder(javax.swing.BorderFactory.createTitledBorder("Intervalo de Execuções"));

        labelMinutos.setText("Minutos");

        labelSegundos.setText("Segundos");

        minutos.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        minutos.setEnabled(false);

        segundos.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        segundos.setEnabled(false);

        horas.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        horas.setEnabled(false);

        labelHoras.setText("Horas");

        javax.swing.GroupLayout painelIntervaloLayout = new javax.swing.GroupLayout(painelIntervalo);
        painelIntervalo.setLayout(painelIntervaloLayout);
        painelIntervaloLayout.setHorizontalGroup(
            painelIntervaloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelIntervaloLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(painelIntervaloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(horas, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelHoras))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelIntervaloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minutos, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMinutos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelIntervaloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(segundos, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSegundos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelIntervaloLayout.setVerticalGroup(
            painelIntervaloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelIntervaloLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(painelIntervaloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(segundos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(horas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(minutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelIntervaloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelHoras)
                    .addComponent(labelMinutos)
                    .addComponent(labelSegundos))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        painelExecucao.setBorder(javax.swing.BorderFactory.createTitledBorder("Execução"));

        labelIniciarPararExe.setText("Iniciar/Parar Execução:");
        labelIniciarPararExe.setEnabled(false);

        atalhoExecucao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "F1", "F2", "F3", "F4" }));
        atalhoExecucao.setEnabled(false);

        checkPararAuto.setText("Parar execução automaticamente");
        checkPararAuto.setEnabled(false);
        checkPararAuto.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkPararAutoStateChanged(evt);
            }
        });

        labelNumRepeticoes.setText("Número de repetições: ");
        labelNumRepeticoes.setEnabled(false);

        checkDesligarPC.setText("Desligar o PC automaticamente");
        checkDesligarPC.setEnabled(false);

        btnExecutar.setText("Executar");
        btnExecutar.setEnabled(false);
        btnExecutar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExecutarMouseClicked(evt);
            }
        });

        numRepeticoes.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        numRepeticoes.setEnabled(false);

        javax.swing.GroupLayout painelExecucaoLayout = new javax.swing.GroupLayout(painelExecucao);
        painelExecucao.setLayout(painelExecucaoLayout);
        painelExecucaoLayout.setHorizontalGroup(
            painelExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelExecucaoLayout.createSequentialGroup()
                .addGroup(painelExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelExecucaoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(painelExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelExecucaoLayout.createSequentialGroup()
                                .addComponent(labelIniciarPararExe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(atalhoExecucao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(checkPararAuto)
                            .addComponent(checkDesligarPC)))
                    .addGroup(painelExecucaoLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(btnExecutar))
                    .addGroup(painelExecucaoLayout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(labelNumRepeticoes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numRepeticoes, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelExecucaoLayout.setVerticalGroup(
            painelExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelExecucaoLayout.createSequentialGroup()
                .addGap(0, 31, Short.MAX_VALUE)
                .addGroup(painelExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIniciarPararExe)
                    .addComponent(atalhoExecucao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkPararAuto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelExecucaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNumRepeticoes)
                    .addComponent(numRepeticoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(checkDesligarPC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExecutar)
                .addContainerGap())
        );

        painelCaptura.setBorder(javax.swing.BorderFactory.createTitledBorder("Captura"));

        labelIniciarPararCap.setText("Iniciar/Parar Captura:");
        labelIniciarPararCap.setEnabled(false);

        atalhoCaptura.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "F5", "F6", "F7", "F8" }));
        atalhoCaptura.setEnabled(false);

        btnCapturar.setText("Capturar");
        btnCapturar.setEnabled(false);
        btnCapturar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCapturarMouseClicked(evt);
            }
        });
        btnCapturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapturarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelCapturaLayout = new javax.swing.GroupLayout(painelCaptura);
        painelCaptura.setLayout(painelCapturaLayout);
        painelCapturaLayout.setHorizontalGroup(
            painelCapturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCapturaLayout.createSequentialGroup()
                .addGroup(painelCapturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCapturaLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(labelIniciarPararCap)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(atalhoCaptura, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCapturaLayout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(btnCapturar)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        painelCapturaLayout.setVerticalGroup(
            painelCapturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCapturaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCapturaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelIniciarPararCap)
                    .addComponent(atalhoCaptura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCapturar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/LogoIcone.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 1, 18)); // NOI18N
        jLabel2.setText("AUTOINPUT 1.0");

        jMenuBar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenuBar1MouseEntered(evt);
            }
        });

        MenuArquivo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/arquivo.gif"))); // NOI18N
        MenuArquivo.setText("Arquivo");

        subMenuAddPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/add-submenu.png"))); // NOI18N
        subMenuAddPerfil.setText("Adicionar Perfil");
        subMenuAddPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuAddPerfilActionPerformed(evt);
            }
        });
        MenuArquivo.add(subMenuAddPerfil);

        subMenuDeletarPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/excluir.gif"))); // NOI18N
        subMenuDeletarPerfil.setText("Deletar Perfil");
        subMenuDeletarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuDeletarPerfilActionPerformed(evt);
            }
        });
        MenuArquivo.add(subMenuDeletarPerfil);

        subMenuSalvarPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/salvar-submenu.jpg"))); // NOI18N
        subMenuSalvarPerfil.setText("Salvar Perfil");
        subMenuSalvarPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuSalvarPerfilActionPerformed(evt);
            }
        });
        MenuArquivo.add(subMenuSalvarPerfil);

        jMenuBar1.add(MenuArquivo);

        MenuConfig.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/config-submenu.png"))); // NOI18N
        MenuConfig.setText("Configuração");

        subMenuIdioma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/idioma.png"))); // NOI18N
        subMenuIdioma.setText("Idioma");
        subMenuIdioma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuIdiomaActionPerformed(evt);
            }
        });
        MenuConfig.add(subMenuIdioma);

        subMenuDiretorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/autoinput/imagens/diretorio.png"))); // NOI18N
        subMenuDiretorio.setText("Diretório");
        subMenuDiretorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subMenuDiretorioActionPerformed(evt);
            }
        });
        MenuConfig.add(subMenuDiretorio);

        jMenuBar1.add(MenuConfig);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(painelExecucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelIntervalo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelPerfil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelCaptura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelPerfil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(painelIntervalo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(painelExecucao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(painelCaptura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void subMenuDiretorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuDiretorioActionPerformed
        // TODO add your handling code here:
        Diretorio dir = new Diretorio();
        dir.setVisible(true);      
    }//GEN-LAST:event_subMenuDiretorioActionPerformed

    private void btnNovoPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoPerfilActionPerformed
        // TODO add your handling code here:
        this.add();
    }//GEN-LAST:event_btnNovoPerfilActionPerformed

    private void btnExcluirPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPerfilActionPerformed
        // TODO add your handling code here:
        this.exclui();
    }//GEN-LAST:event_btnExcluirPerfilActionPerformed

    private void btnSalvarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarPerfilActionPerformed
        // TODO add your handling code here:
        this.salva();
    }//GEN-LAST:event_btnSalvarPerfilActionPerformed
    
    private void listaPerfisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listaPerfisActionPerformed
        // TODO add your handling code here:
        if ((listaPerfis.getSelectedItem() == "----------------") || (listaPerfis.getSelectedItem() == "none")){
            btnExcluirPerfil.setEnabled(false);
            btnSalvarPerfil.setEnabled(false);
            atalhoCaptura.setSelectedItem("F5");
            atalhoExecucao.setSelectedItem("F1");
            horas.setValue(0);
            minutos.setValue(0);
            segundos.setValue(0);
            numRepeticoes.setValue(0);
            checkPararAuto.setSelected(false);
            checkDesligarPC.setSelected(false);
            atalhoCaptura.setEnabled(false);
            atalhoExecucao.setEnabled(false);
            horas.setEnabled(false);
            minutos.setEnabled(false);
            segundos.setEnabled(false);
            numRepeticoes.setEnabled(false);
            checkPararAuto.setEnabled(false);
            checkDesligarPC.setEnabled(false);
            labelIniciarPararExe.setEnabled(false);
            labelIniciarPararCap.setEnabled(false);
            btnCapturar.setEnabled(false);
            btnExecutar.setEnabled(false);
        }
        else{
            atalhoCaptura.setEnabled(true);
            labelIniciarPararExe.setEnabled(true);
            labelIniciarPararCap.setEnabled(true);
            btnCapturar.setEnabled(true);
            btnExecutar.setEnabled(true);
            atalhoExecucao.setEnabled(true);
            horas.setEnabled(true);
            minutos.setEnabled(true);
            segundos.setEnabled(true);
            checkPararAuto.setEnabled(true);       
            btnExcluirPerfil.setEnabled(true);
            btnSalvarPerfil.setEnabled(true);
            Macro macro = new Macro();
            try {
                macro.visualizarMacro(listaPerfis.getSelectedItem().toString());
            } catch (IOException ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
            atalhoCaptura.setSelectedItem(macro.getPararCaptura());
            atalhoExecucao.setSelectedItem(macro.getPararExecução());
            horas.setValue(macro.getIntervalo().getHora());
            minutos.setValue(macro.getIntervalo().getMinuto());
            segundos.setValue(macro.getIntervalo().getSegundo());
            numRepeticoes.setValue(macro.getNumeroRepetições());
            checkPararAuto.setSelected(macro.isPararAutomaticamente());
            checkDesligarPC.setSelected(macro.isDesligarAuto());
        }
    }//GEN-LAST:event_listaPerfisActionPerformed

    private void subMenuIdiomaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuIdiomaActionPerformed
        // TODO add your handling code here:
        Object[] opcoes = {this.getPortugues(),this.getIngles()};
        Object res = JOptionPane.showInputDialog(this, this.escolha, this.selecao ,
				JOptionPane.PLAIN_MESSAGE , null ,opcoes,"");
        if(res == opcoes[1]){
            this.mudarIdioma("1");
        }
        if(res == opcoes[0]){
            this.mudarIdioma("0");
        }
        if(res == null){
        }
    }//GEN-LAST:event_subMenuIdiomaActionPerformed

    private void listaPerfisPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_listaPerfisPopupMenuWillBecomeVisible
        // TODO add your handling code here:
    if(1>=listaPerfis.getItemCount()){
        ArrayList nomes = new ArrayList();
        try{
            String linha;  
            String menoslinha;
            String diretorio ="";
            BufferedReader in = new BufferedReader(new FileReader("config.txt"));
    while ((linha = in.readLine()) != null) {  
            if (linha.contains("PERFIS:")) {   
                while((linha = in.readLine()) != null){
                    menoslinha=linha;
                    try{
                        linha = in.readLine();
                        FileReader arq = new FileReader(linha);
                        BufferedReader lerArq = new BufferedReader(arq);
                        arq.close();
                        nomes.add(menoslinha);
                    }
                    catch(IOException e){
                        Perfil perf = new Perfil();
                        perf.deletarPerfil(menoslinha);
                    }
                }
            }  
        }
    in.close();
        }catch(IOException e){
            
        }
        String perfil;
        if(!nomes.isEmpty()){
            Iterator i = nomes.iterator();
            while(i.hasNext()){
                perfil = i.next().toString();
                listaPerfis.addItem(perfil);
            }
        }
    }
    }//GEN-LAST:event_listaPerfisPopupMenuWillBecomeVisible

    private void checkPararAutoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkPararAutoStateChanged
        // TODO add your handling code here:
         if (checkPararAuto.isSelected()){
           numRepeticoes.setEnabled(true);
           labelNumRepeticoes.setEnabled(true);
           checkDesligarPC.setEnabled(true);
           
       }
       if (!checkPararAuto.isSelected()){
           numRepeticoes.setEnabled(false);
           labelNumRepeticoes.setEnabled(false);
           checkDesligarPC.setEnabled(false);
       }
    }//GEN-LAST:event_checkPararAutoStateChanged

    private void btnCapturarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCapturarMouseClicked
        // TODO add your handling code here:
        Macro macro = new Macro();
        macro.setPararCaptura(atalhoCaptura.getSelectedItem().toString());
        macro.setPararExecução(atalhoExecucao.getSelectedItem().toString());
        Timer tempo = new Timer();
        tempo.setHora(Integer.parseInt(horas.getValue().toString()));
        tempo.setMinuto(Integer.parseInt(minutos.getValue().toString()));
        tempo.setSegundo(Integer.parseInt(segundos.getValue().toString()));
        macro.setIntervalo(tempo);
        macro.setNumeroRepetições(Integer.parseInt(numRepeticoes.getValue().toString()));
        macro.setPararAutomaticamente(checkPararAuto.isSelected());
        macro.setDesligarAuto(checkDesligarPC.isSelected());
        Perfil perfil = new Perfil();
        perfil.setMacroconfig(macro);
        perfil.setNome(listaPerfis.getSelectedItem().toString());

        try {
            perfil.Clear();
        } catch (IOException ex) {
        }
   
        try {
            GlobalScreen.registerNativeHook();
        }
        catch (NativeHookException ex) {     
            System.exit(1);
        }
        
        // Construct the example object.
        Captura cap = new Captura();
        cap.setPerfil(listaPerfis.getSelectedItem().toString());
        cap.setTela(this);
        
        Executando ex = new Executando();
        ex.setTexto(this.getCaptura());
        ex.setVisible(true);
        cap.setEx(ex);
        // Add the appropriate listeners.
        GlobalScreen.addNativeMouseListener(cap);
        GlobalScreen.addNativeKeyListener(cap);
        GlobalScreen.addNativeMouseWheelListener(cap);
    }//GEN-LAST:event_btnCapturarMouseClicked

    private void btnExecutarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExecutarMouseClicked
        // TODO add your handling code here:
        Macro macro = new Macro();
        macro.setPararCaptura(atalhoCaptura.getSelectedItem().toString());
        macro.setPararExecução(atalhoExecucao.getSelectedItem().toString());
        Timer tempo = new Timer();
        tempo.setHora(Integer.parseInt(horas.getValue().toString()));
        tempo.setMinuto(Integer.parseInt(minutos.getValue().toString()));
        tempo.setSegundo(Integer.parseInt(segundos.getValue().toString()));
        macro.setIntervalo(tempo);
        macro.setNumeroRepetições(Integer.parseInt(numRepeticoes.getValue().toString()));
        macro.setPararAutomaticamente(checkPararAuto.isSelected());
        macro.setDesligarAuto(checkDesligarPC.isSelected());
        Perfil perfil = new Perfil();
        perfil.setMacroconfig(macro);
        perfil.setNome(listaPerfis.getSelectedItem().toString());
        try {
            GlobalScreen.registerNativeHook();
        }
        catch (NativeHookException ex) {     
            System.exit(1);
        }
        
        GlobalScreen.addNativeKeyListener(perfil);
        try {
            this.setVisible(false);
            perfil.executarComandos(this);
            if(macro.isPararAutomaticamente() && macro.isDesligarAuto()){
            Runtime.getRuntime().exec("shutdown -s -t 10 -f");
            JOptionPane.showMessageDialog(this, this.getDesliga());
            Runtime.getRuntime().exec("shutdown -a");
            }
        } catch (IOException ex) {
        }
        
        
    }//GEN-LAST:event_btnExecutarMouseClicked

    private void btnCapturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapturarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        
        
    }//GEN-LAST:event_btnCapturarActionPerformed

    private void subMenuAddPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuAddPerfilActionPerformed
        // TODO add your handling code here:
        this.add();
    }//GEN-LAST:event_subMenuAddPerfilActionPerformed

    private void subMenuDeletarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuDeletarPerfilActionPerformed
        // TODO add your handling code here:
        this.exclui();
    }//GEN-LAST:event_subMenuDeletarPerfilActionPerformed

    private void subMenuSalvarPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subMenuSalvarPerfilActionPerformed
        // TODO add your handling code here:
        this.salva();
    }//GEN-LAST:event_subMenuSalvarPerfilActionPerformed

    private void jMenuBar1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuBar1MouseEntered
        // TODO add your handling code here:
        if (listaPerfis.getSelectedItem() == "----------------"){
            subMenuDeletarPerfil.setVisible(false);
            subMenuSalvarPerfil.setVisible(false);
            
        } else {
            subMenuDeletarPerfil.setVisible(true);
            subMenuSalvarPerfil.setVisible(true);
        }
    }//GEN-LAST:event_jMenuBar1MouseEntered
    
    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    
    public static void criaArquivo() throws IOException{
    String nome = "config.txt";
    try {
      FileReader arq = new FileReader(nome);
      BufferedReader lerArq = new BufferedReader(arq);
      arq.close();
    } catch (IOException e) {
    FileWriter arq = new FileWriter("config.txt");
    PrintWriter gravarArq = new PrintWriter(arq);
    gravarArq.printf("DIRETORIO:%n%n");
    gravarArq.printf("PERFIS:%n");
    arq.close();
    }
    System.out.println();
    }
    
    private void mudarIdioma(String valor){
        String nome = "lib/idioma.txt";
            try{
                String linha = "";
                BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(nome), "ISO-8859-1"));
                OutputStreamWriter gravartemp = new OutputStreamWriter(new FileOutputStream("temp.txt"),"ISO-8859-1");
                linha = in.readLine();
                gravartemp.write(linha+"\r\n");
                linha = in.readLine();
                gravartemp.write(valor+"\r\n");
                while ((linha = in.readLine()) != null) {  
                    gravartemp.write(linha+"\r\n");
                }
                in.close();
                gravartemp.close();
                
                String linha2 = "";
                BufferedReader out = new BufferedReader(new InputStreamReader(new FileInputStream("temp.txt"), "ISO-8859-1"));
                OutputStreamWriter gravarIdioma = new OutputStreamWriter(new FileOutputStream(nome),"ISO-8859-1");
                while ((linha2 = out.readLine()) != null) {  
                    gravarIdioma.write(linha2+"\r\n");
                }
                out.close();
                gravarIdioma.close();
                File deletatemp = new File("temp.txt");
                deletatemp.delete();
                this.idioma(this);
            }catch(IOException e){
           }    
    }
   
    private void add (){
        int a = 1;
        String nomeNovoPerfil = JOptionPane.showInputDialog(this, this.getNomePerfil(), this.getNovoPerfil(), JOptionPane.QUESTION_MESSAGE);
        if (nomeNovoPerfil != null){ //ao pressionar Esc ou o botão fechar o componente pode retornar nulo
            if(nomeNovoPerfil.trim().isEmpty()){ //.isEmpty() ao invés de ("") + .trim() para verificar se o usuário foi malandro e inseriu espaços
                    JOptionPane.showMessageDialog(this, this.getNomeInvalido());
                    a = 0;
            } else if (a==1){ 
            String linha;       
            String diretorio ="";
            try{
            BufferedReader in = new BufferedReader(new FileReader("config.txt"));
            while ((linha = in.readLine()) != null) {  
            if (linha.equals(nomeNovoPerfil)) { 
                JOptionPane.showMessageDialog(this, this.getNomeInvalido());
                a = 0;
                }  
            }
            in.close();
            } catch (IOException e) {
            }    
            }
            if (a==1){
                try {
                    Perfil perf = new Perfil();
                    perf.criaPerfil(nomeNovoPerfil);
                } catch (IOException ex) {
                }
                listaPerfis.addItem(nomeNovoPerfil);
                listaPerfis.setSelectedItem(nomeNovoPerfil);
                btnExcluirPerfil.setEnabled(true);
                btnSalvarPerfil.setEnabled(true);
            }
        }
    }
    
    private void exclui(){
        int resposta;
        resposta = JOptionPane.showConfirmDialog(this, this.getDeletar(), this.getExcluirPerfil(), JOptionPane.YES_NO_OPTION);
        if (resposta == JOptionPane.YES_OPTION) {
            //excluir perfil
            try {
                Perfil perf = new Perfil();
                String nome = listaPerfis.getSelectedItem().toString();
                perf.deletarPerfil(nome);
                listaPerfis.removeItem(nome);
                listaPerfis.setSelectedItem("----------------");
                btnExcluirPerfil.setEnabled(false);
                btnSalvarPerfil.setEnabled(false);
            } catch (IOException ex) {
                Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(this, this.getConfDeletar());
        } 
        if (resposta == JOptionPane.NO_OPTION) {
            //excluir perfil
            
        }
        if (resposta == CLOSED_OPTION) {
            //excluir perfil
            
        }
    }
    
    private void salva(){
        Macro macro = new Macro();
        macro.setPararCaptura(atalhoCaptura.getSelectedItem().toString());
        macro.setPararExecução(atalhoExecucao.getSelectedItem().toString());
        Timer tempo = new Timer();
        tempo.setHora(Integer.parseInt(horas.getValue().toString()));
        tempo.setMinuto(Integer.parseInt(minutos.getValue().toString()));
        tempo.setSegundo(Integer.parseInt(segundos.getValue().toString()));
        macro.setIntervalo(tempo);
        macro.setNumeroRepetições(Integer.parseInt(numRepeticoes.getValue().toString()));
        macro.setPararAutomaticamente(checkPararAuto.isSelected());
        macro.setDesligarAuto(checkDesligarPC.isSelected());
        Perfil perfil = new Perfil();
        perfil.setMacroconfig(macro);
        try {
            perfil.salvarMacro(listaPerfis.getSelectedItem().toString());
        } catch (IOException ex) {
            Logger.getLogger(TelaInicial.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void idioma (TelaInicial tela){
                String nome = "lib/idioma.txt";
                try{
                    FileReader arq = new FileReader(nome);
                    BufferedReader lerArq = new BufferedReader(new InputStreamReader(new FileInputStream(nome), "ISO-8859-1"));
                    String linha = lerArq.readLine();
                    if(lerArq.readLine().equals("1")){
                        linha = lerArq.readLine();
                        while(!linha.equals("1")) linha = lerArq.readLine();
                        tela.MenuArquivo.setText(lerArq.readLine());
                        tela.MenuConfig.setText(lerArq.readLine());
                        tela.subMenuAddPerfil.setText(lerArq.readLine());
                        tela.subMenuDeletarPerfil.setText(lerArq.readLine());
                        tela.subMenuSalvarPerfil.setText(lerArq.readLine());
                        tela.subMenuIdioma.setText(lerArq.readLine());
                        tela.subMenuDiretorio.setText(lerArq.readLine());
                        tela.painelPerfil.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.painelIntervalo.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.labelHoras.setText(lerArq.readLine());
                        tela.labelMinutos.setText(lerArq.readLine());
                        tela.labelSegundos.setText(lerArq.readLine());
                        tela.painelExecucao.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.labelIniciarPararExe.setText(lerArq.readLine());
                        tela.checkPararAuto.setText(lerArq.readLine());
                        tela.labelNumRepeticoes.setText(lerArq.readLine());
                        tela.checkDesligarPC.setText(lerArq.readLine());
                        tela.btnExecutar.setText(lerArq.readLine());
                        tela.painelCaptura.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.labelIniciarPararCap.setText(lerArq.readLine());
                        tela.btnCapturar.setText(lerArq.readLine());
                        tela.setDeletar(lerArq.readLine());
                        tela.setConfDeletar(lerArq.readLine());
                        tela.setExcluirPerfil(lerArq.readLine());
                        tela.setNomePerfil(lerArq.readLine());
                        tela.setNovoPerfil(lerArq.readLine());
                        tela.setNomeInvalido(lerArq.readLine());
                        tela.setPortugues(lerArq.readLine());
                        tela.setIngles(lerArq.readLine());
                        tela.setEscolha(lerArq.readLine());
                        tela.setSelecao(lerArq.readLine());
                        tela.setCaptura(lerArq.readLine());
                        tela.setDesliga(lerArq.readLine());
                        lerArq.close();
                        arq.close();
                    }else{
                        linha = lerArq.readLine();
                        linha = lerArq.readLine();
                        while(!linha.equals("0")) linha = lerArq.readLine();
                        tela.MenuArquivo.setText(lerArq.readLine());
                        tela.MenuConfig.setText(lerArq.readLine());
                        tela.subMenuAddPerfil.setText(lerArq.readLine());
                        tela.subMenuDeletarPerfil.setText(lerArq.readLine());
                        tela.subMenuSalvarPerfil.setText(lerArq.readLine());
                        tela.subMenuIdioma.setText(lerArq.readLine());
                        tela.subMenuDiretorio.setText(lerArq.readLine());
                        tela.painelPerfil.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.painelIntervalo.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.labelHoras.setText(lerArq.readLine());
                        tela.labelMinutos.setText(lerArq.readLine());
                        tela.labelSegundos.setText(lerArq.readLine());
                        tela.painelExecucao.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.labelIniciarPararExe.setText(lerArq.readLine());
                        tela.checkPararAuto.setText(lerArq.readLine());
                        tela.labelNumRepeticoes.setText(lerArq.readLine());
                        tela.checkDesligarPC.setText(lerArq.readLine());
                        tela.btnExecutar.setText(lerArq.readLine());
                        tela.painelCaptura.setBorder(javax.swing.BorderFactory.createTitledBorder(lerArq.readLine()));
                        tela.labelIniciarPararCap.setText(lerArq.readLine());
                        tela.btnCapturar.setText(lerArq.readLine());
                        tela.setDeletar(lerArq.readLine());
                        tela.setConfDeletar(lerArq.readLine());
                        tela.setExcluirPerfil(lerArq.readLine());
                        tela.setNomePerfil(lerArq.readLine());
                        tela.setNovoPerfil(lerArq.readLine());
                        tela.setNomeInvalido(lerArq.readLine());
                        tela.setPortugues(lerArq.readLine());
                        tela.setIngles(lerArq.readLine());
                        tela.setEscolha(lerArq.readLine());
                        tela.setSelecao(lerArq.readLine());
                        tela.setCaptura(lerArq.readLine());
                        tela.setDesliga(lerArq.readLine());
                        lerArq.close();
                        arq.close();
                    }
                }catch(IOException e){  
                }            
    }
    public static void main(String args[]) throws IOException {
        
        criaArquivo();
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaInicial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TelaInicial tela = new TelaInicial();
                tela.idioma(tela);
                tela.setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu MenuArquivo;
    private javax.swing.JMenu MenuConfig;
    private javax.swing.JComboBox atalhoCaptura;
    private javax.swing.JComboBox atalhoExecucao;
    private javax.swing.JButton btnCapturar;
    private javax.swing.JButton btnExcluirPerfil;
    private javax.swing.JButton btnExecutar;
    private javax.swing.JButton btnNovoPerfil;
    private javax.swing.JButton btnSalvarPerfil;
    private javax.swing.JCheckBox checkDesligarPC;
    private javax.swing.JCheckBox checkPararAuto;
    private javax.swing.JSpinner horas;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel labelHoras;
    private javax.swing.JLabel labelIniciarPararCap;
    private javax.swing.JLabel labelIniciarPararExe;
    private javax.swing.JLabel labelMinutos;
    private javax.swing.JLabel labelNumRepeticoes;
    private javax.swing.JLabel labelSegundos;
    private javax.swing.JComboBox listaPerfis;
    private javax.swing.JSpinner minutos;
    private javax.swing.JSpinner numRepeticoes;
    private javax.swing.JPanel painelCaptura;
    private javax.swing.JPanel painelExecucao;
    private javax.swing.JPanel painelIntervalo;
    private javax.swing.JPanel painelPerfil;
    private javax.swing.JSpinner segundos;
    private javax.swing.JMenuItem subMenuAddPerfil;
    private javax.swing.JMenuItem subMenuDeletarPerfil;
    private javax.swing.JMenuItem subMenuDiretorio;
    private javax.swing.JMenuItem subMenuIdioma;
    private javax.swing.JMenuItem subMenuSalvarPerfil;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/autoinput/imagens/Logo.png")));
    }
}
